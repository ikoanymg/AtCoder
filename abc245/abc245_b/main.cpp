#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, const std::vector<int64_t> &A) {
    // TODO: edit here
    int min = 2001;
    int max_A = *max_element(A.begin(), A.end());
    for (int i=0; i<=max_A; i++){
        bool flag = false;
        for (int j=0; j<N; j++){
            if (A[j]==i){
                flag = true;
                }
        }
        if (!flag){
            if (i<min){
                min = i;
            } 
            }
    }
    if (min == 2001){
        min = max_A+1;
    }
    return min;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> A(N);
    REP (i, N) { std::cin >> A[i]; }
    auto ans = solve(N, A);
    std::cout << ans << '\n';
    return 0;
}
