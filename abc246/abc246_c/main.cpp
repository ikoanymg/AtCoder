#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int64_t K, int64_t X, std::vector<int64_t> &A) {
    // TODO: edit here
    int total = 0;
    while (K > 0) {
        auto it = std::max_element(A.begin(), A.end());
        int maxind = std::distance(A.begin(), it);
        A[maxind] -= X;
        if (A[maxind]<0) A[maxind] = 0;
        K -= 1;
    }
    REP(i,N){total += A[i];}
    return total;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t K, X;
    std::cin >> N;
    std::cin >> K >> X;
    std::vector<int64_t> A(N);
    REP (i, N) { std::cin >> A[i]; }

    auto ans = solve(N, K, X, A);
    std::cout << ans << endl;
    return 0;
}
